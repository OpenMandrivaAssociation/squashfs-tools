From 378fbfdbd3c0036f613dac8ef3b5044feff27669 Mon Sep 17 00:00:00 2001
From: Phillip Lougher <phillip@squashfs.org.uk>
Date: Mon, 7 Jul 2014 04:37:47 +0100
Subject: [PATCH 008/120] actions: fix empty action

The empty action leaves orphaned inode entries in the inode_info[] table.
These entries because they are orphaned do not (correctly) get allocated
an inode number.  However, write_inode_lookup_table() does not
deal with these orphaned inode entries with an inode number of 0, and
thus writes outside of the bounds of inode_lookup_table[] causing
memory corruption.

Fix this by adding code to skip any orphaned inode entries - that is
an inode number of 0.

Signed-off-by: Phillip Lougher <phillip@squashfs.org.uk>
---
 squashfs-tools/mksquashfs.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/squashfs-tools/mksquashfs.c b/squashfs-tools/mksquashfs.c
index c33841c..35fa51d 100644
--- a/squashfs-tools/mksquashfs.c
+++ b/squashfs-tools/mksquashfs.c
@@ -4194,6 +4194,15 @@ long long write_inode_lookup_table()
 
 			inode_number = get_inode_no(inode);
 
+			/* The empty action will produce orphaned inode
+			 * entries in the inode_info[] table.  These
+			 * entries because they are orphaned will not be
+			 * allocated an inode number in dir_scan5(), so
+			 * skip any entries with the default dummy inode
+			 * number of 0 */
+			if(inode_number == 0)
+				continue;
+
 			SQUASHFS_SWAP_LONG_LONGS(&inode->inode,
 				&inode_lookup_table[inode_number - 1], 1);
 
-- 
2.8.3

